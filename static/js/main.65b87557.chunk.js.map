{"version":3,"sources":["components/TodoList/style.module.scss","components/base/Clock/style.module.scss","components/base/AddList/style.module.scss","components/base/AddList/ColorButton/style.module.scss","components/base/Panel/style.module.scss","components/base/Panel/TodoItem/style.module.scss","components/base/SaveButton/style.module.scss","components/base/Clock/index.jsx","components/base/AddList/ColorButton/index.jsx","components/TodoList/useTaskReducer.js","components/base/AddList/index.jsx","components/base/Panel/TodoItem/index.jsx","components/base/Panel/index.jsx","components/base/SaveButton/index.jsx","components/TodoList/index.jsx","views/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","cx","classnames","bind","styles","Clock","useState","dayjs","time","setTime","useEffect","timeId","setInterval","add","clearInterval","className","format","ColorButton","props","colorType","handleColor","selectedColor","active","onClick","e","initialState","allList","listTitle","listId","tasks","taskTitle","taskId","LIST_ACTION","TASK_ACTION","taskReducer","taskInfo","action","type","payload","find","item","filter","list","colorList","AddList","taskDispatch","setSelectedColor","inputRef","useRef","map","color","index","onSubmit","preventDefault","inputValue","current","value","trim","uuidv4","blur","id","placeholder","ref","onBlur","Panel","children","listIndex","isEditing","setIsEditing","listRef","taskRef","editList","newValue","deleteList","addTask","draggableId","provided","innerRef","draggableProps","dragHandleProps","defaultValue","autoFocus","hidden","droppableId","droppableProps","Item","itemIndex","deleteItem","editTask","SaveButton","saveAll","React","open","setOpen","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","message","TodoList","useReducer","useTaskReducer","JSON","parse","localStorage","getItem","onDragEnd","dragInfo","destination","source","panelList","sourceList","targetList","splice","direction","element","setItem","stringify","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","unstable_createMuiStrictModeTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.65b87557.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3W5hH\",\"lists\":\"style_lists__2f5Ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"style_clock__1lBCv\",\"date\":\"style_date__163Dw\",\"time\":\"style_time__3PkdG\",\"alarm-icon\":\"style_alarm-icon__2270L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-list\":\"style_add-list__14wpM\",\"color-picker\":\"style_color-picker__8AS1A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-button\":\"style_color-button__2wSPs\",\"red\":\"style_red__vNQq8\",\"active\":\"style_active__1NHWg\",\"yellow\":\"style_yellow__3W-xG\",\"green\":\"style_green__3Tvya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"style_panel__JIYol\",\"header\":\"style_header__3w4Rq\",\"actions\":\"style_actions__2mZQz\",\"btn\":\"style_btn__1ANR2\",\"hidden\":\"style_hidden__yyVsC\",\"body\":\"style_body__1hJ8r\",\"add-item\":\"style_add-item__1WWWz\",\"red\":\"style_red__1rg7c\",\"yellow\":\"style_yellow__2Zz1Q\",\"green\":\"style_green__1Kmfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__3sowT\",\"actions\":\"style_actions__1z4tI\",\"hidden\":\"style_hidden__1q8wu\",\"btn\":\"style_btn__1awRD\",\"red\":\"style_red__1m3_y\",\"yellow\":\"style_yellow__1IZdw\",\"green\":\"style_green__2ueFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"save\":\"style_save__2uRWZ\"};","import React, { useState, useEffect } from 'react'\nimport classnames from 'classnames/bind';\nimport styles from './style.module.scss';\nimport dayjs from 'dayjs';\nimport { MdAccessAlarm } from 'react-icons/md';\n\nconst cx = classnames.bind(styles);\n\n\n\n\n\nexport default function Clock() {\n    const [time, setTime] = useState(dayjs());\n\n    useEffect(() => {\n        const counter = () => setTime(time.add(1, 's'));\n        const timeId = setInterval(counter, 1000);\n        return () => {\n            clearInterval(timeId);\n        }\n    }, [time])\n        \n    return(\n        <div className={cx('clock')}>\n            <div className={cx('date')}>\n               {time.format('ddd, MMM DD, YYYY ')}\n            </div>\n            <div className={cx('time')}>\n               <div className={cx('alarm-icon')}><MdAccessAlarm /></div>\n               {time.format('HH:mm:ss')}\n            </div>\n            \n        </div>\n    )\n}","import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./style.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst cx = classnames.bind(styles);\n\nColorButton.propTypes = {\n  colorType: PropTypes.string,\n  handleColor: PropTypes.func,\n  selectedColor: PropTypes.string,\n};\n\nexport default function ColorButton(props) {\n  const { colorType, handleColor, selectedColor } = props;\n\n  return (\n    <button\n      className={cx(\"color-button\", colorType, {\n        active: selectedColor === colorType,\n      })}\n      onClick={(e) => handleColor(colorType)}\n    />\n  );\n}\n","import { useReducer } from \"react\";\n\nconst initialState = {\n  allList: [{ listTitle: \"已完成\", listId: \"001\", colorType: \"red\" }],\n  tasks: {\n    \"001\": [{ taskTitle: \"打疫苗\", taskId: \"0011\" }],\n  },\n};\n\nexport const LIST_ACTION = {\n  INITIAL_STATE: \"initialState\",\n  ADD_LIST: \"addList\",\n  EDIT_LIST: \"editList\",\n  DELETE_LIST: \"deleteList\",\n  MOVE_LIST: \"moveList\",\n};\n\nexport const TASK_ACTION = {\n  ADD_TASK: \"addTask\",\n  EDIT_TASK: \"editTask\",\n  DELETE_TASK: \"deleteTask\",\n  MOVE_TASK: \"moveTask\",\n};\n\nconst taskReducer = (taskInfo, action) => {\n  switch (action.type) {\n    case LIST_ACTION.INITIAL_STATE:\n      return action.payload;\n\n    case LIST_ACTION.ADD_LIST:\n      return {\n        allList: [...taskInfo.allList, action.payload],\n        tasks: { ...taskInfo.tasks, [action.payload.listId]: [] },\n      };\n\n    case LIST_ACTION.EDIT_LIST:\n      const list = taskInfo.allList.find(\n        (item) => item.listId === action.payload.listId\n      );\n      list.listTitle = action.payload.listTitle;\n      return { ...taskInfo };\n\n    case LIST_ACTION.DELETE_LIST:\n      delete taskInfo.tasks[action.payload];\n      return {\n        ...taskInfo,\n        allList: taskInfo.allList.filter(\n          (item) => item.listId !== action.payload\n        ),\n      };\n\n    case LIST_ACTION.MOVE_LIST:\n      return {\n        ...taskInfo,\n        allList: action.payload,\n      };\n\n    case TASK_ACTION.ADD_TASK:\n      return {\n        ...taskInfo,\n        tasks: {\n          ...taskInfo.tasks,\n          [action.list]: [...taskInfo.tasks[action.list], action.payload],\n        },\n      };\n\n    case TASK_ACTION.EDIT_TASK:\n      const task = taskInfo.tasks[action.list].find(\n        (item) => item.taskId === action.payload.taskId\n      );\n      task.taskTitle = action.payload.taskTitle;\n      return { ...taskInfo };\n\n    case TASK_ACTION.DELETE_TASK:\n      return {\n        ...taskInfo,\n        tasks: {\n          ...taskInfo.tasks,\n          [action.list]: taskInfo.tasks[action.list].filter(\n            (item) => item.taskId !== action.payload\n          ),\n        },\n      };\n\n    case TASK_ACTION.MOVE_TASK:\n      return {\n        ...taskInfo,\n        tasks: action.payload,\n      };\n\n    default:\n      return taskInfo;\n  }\n};\n\nexport default function useTaskReducer() {\n  const [taskInfo, taskDispatch] = useReducer(taskReducer, initialState);\n\n  return  [taskInfo, taskDispatch];\n}\n","import React, { useRef, useState } from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./style.module.scss\";\nimport PropTypes from \"prop-types\";\n\n// components\nimport ColorButton from \"./ColorButton\";\n\n// lib\nimport { v4 as uuidv4 } from \"uuid\";\n\n// utils\nimport { LIST_ACTION } from \"../../TodoList/useTaskReducer\";\n\nconst cx = classnames.bind(styles);\n\nAddList.propTypes = {\n  taskDispatch: PropTypes.func,\n};\n\nconst colorList = [\"red\", \"yellow\", \"green\"];\n\nexport default function AddList({ taskDispatch }) {\n  const [selectedColor, setSelectedColor] = useState(\"red\");\n  const inputRef = useRef();\n\n  const addList = (e) => {\n    e.preventDefault();\n    const inputValue = inputRef.current.value.trim();\n    if (inputValue) {\n      taskDispatch({\n        type: LIST_ACTION.ADD_LIST,\n        payload: {\n          listTitle: inputValue,\n          listId: uuidv4(),\n          colorType: selectedColor,\n        },\n      });\n      inputRef.current.value = \"\";\n      inputRef.current.blur();\n    }\n  };\n  return (\n    <div className={cx(\"add-list\")}>\n      <div className={cx(\"color-picker\")}>\n        {colorList.map((color, index) => (\n          <ColorButton\n            key={index}\n            colorType={color}\n            handleColor={setSelectedColor}\n            selectedColor={selectedColor}\n          />\n        ))}\n      </div>\n      <form onSubmit={addList}>\n        <input\n          id=\"addList\"\n          type=\"text\"\n          placeholder=\"Add a list\"\n          ref={inputRef}\n          onBlur={() => (inputRef.current.value = \"\")}\n        />\n        \n      </form>\n    </div>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport styles from \"./style.module.scss\";\nimport classnames from \"classnames/bind\";\n\n// lib\nimport { MdDelete, MdModeEdit } from \"react-icons/md\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\n// utils\nimport { TASK_ACTION } from \"@/TodoList/useTaskReducer\";\nimport PropTypes from \"prop-types\";\n\nconst cx = classnames.bind(styles);\n\nTodoItem.propTypes = {\n  taskTitle: PropTypes.string,\n  taskId: PropTypes.string,\n  colorType: PropTypes.string,\n  listId: PropTypes.string,\n  taskDispatch: PropTypes.func,\n  itemIndex: PropTypes.number,\n};\n\nexport default function TodoItem(props) {\n  const { taskTitle, taskId, colorType, listId, itemIndex, taskDispatch } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef();\n\n  const deleteItem = () => {\n    taskDispatch({\n      type: TASK_ACTION.DELETE_TASK,\n      list: listId,\n      payload: taskId,\n    });\n  };\n\n  const editTask = (e) => {\n    e.preventDefault();\n    const newValue = inputRef.current.value.trim();\n    if (!newValue) {\n      return;\n    } else if (newValue !== taskTitle) {\n      taskDispatch({\n        type: TASK_ACTION.EDIT_TASK,\n        list: listId,\n        payload: { taskTitle: newValue, taskId },\n      });\n    }\n    setIsEditing(false);\n  };\n\n  return (\n    <Draggable draggableId={taskId} index={itemIndex}>\n      {(provided) => (\n        <div\n          className={cx(\"item\", colorType)}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {isEditing ? (\n            <form onSubmit={editTask}>\n              <input\n                type=\"text\"\n                defaultValue={taskTitle}\n                autoFocus\n                ref={inputRef}\n                onBlur={() => setIsEditing(false)}\n              />\n            </form>\n          ) : (\n            <span>{taskTitle}</span>\n          )}\n          <div className={cx(\"actions\", { hidden: isEditing })}>\n            <div\n              className={cx(\"edit\", \"btn\")}\n              onClick={() => setIsEditing(true)}\n            >\n              <MdModeEdit />\n            </div>\n            <div className={cx(\"remove\", \"btn\")} onClick={deleteItem}>\n              <MdDelete />\n            </div>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport styles from \"./style.module.scss\";\nimport classnames from \"classnames/bind\";\nimport PropTypes from 'prop-types'\n\n// components\nimport TodoItem from \"./TodoItem\";\n\n// lib\nimport { v4 as uuidv4 } from 'uuid';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { MdDelete, MdModeEdit } from 'react-icons/md';\n\n// utils\nimport { LIST_ACTION, TASK_ACTION } from '../../TodoList/useTaskReducer';\n\nPanel.propTypes = {\n    listTitle: PropTypes.string,\n    listId: PropTypes.string,\n    children: PropTypes.any,\n    colorType: PropTypes.string,\n    listIndex: PropTypes.number,\n    taskDispatch: PropTypes.func\n}\n\nconst cx = classnames.bind(styles);\n\nexport default function Panel(props) {\n  const { listTitle, listId, colorType, children, listIndex, taskDispatch } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const listRef = useRef();\n  const taskRef = useRef();\n\n  const editList = (e) => {\n    e.preventDefault();\n    const newValue = listRef.current.value.trim();\n\n    if(!newValue) {\n      return;\n    }else if(newValue !== listTitle){\n      taskDispatch({\n        type: LIST_ACTION.EDIT_LIST,\n        payload: {listTitle: newValue, listId, colorType}\n      })\n      \n    }\n    setIsEditing(false);\n  }\n\n  const deleteList = () => {\n    taskDispatch({\n      type: LIST_ACTION.DELETE_LIST,\n      payload: listId\n    })\n  }\n\n\n\n  const addTask = (e) => {\n    e.preventDefault();\n    const newValue = taskRef.current.value.trim();\n    if (newValue) {\n      taskDispatch({\n        type: TASK_ACTION.ADD_TASK,\n        list: listId,\n        payload: {taskTitle: newValue,taskId: uuidv4()} \n      });\n    }\n    taskRef.current.value = '';\n    taskRef.current.blur();\n  };\n\n\n  return (\n\n    <Draggable draggableId={listId} index={listIndex}>\n      {(provided) => (\n      <div\n        className={cx(\"panel\", colorType)}\n        ref={provided.innerRef}\n          {...provided.draggableProps}   \n      >\n        <div className={cx(\"header\")}\n        {...provided.dragHandleProps}\n        >\n          {isEditing ? \n            <form onSubmit={editList}>\n                <input\n                  type=\"text\"\n                  defaultValue={listTitle}\n                  autoFocus\n                  ref={listRef}\n                  onBlur={() => setIsEditing(false)}/>\n                </form>\n            : \n            <span>{listTitle}</span>\n          }\n          <div className={cx('actions',{ hidden: isEditing })}>\n            <div className={cx('edit','btn')} onClick={() => setIsEditing(true)} ><MdModeEdit /></div>\n            <div className={cx('remove','btn')} onClick={deleteList} ><MdDelete /></div>\n          </div>\n        </div>\n        \n        <Droppable droppableId={listId}>\n          {(provided) => (\n            <div className={cx(\"body\")}\n              ref={provided.innerRef} \n              {...provided.droppableProps}\n            >\n                {children}\n                {provided.placeholder}\n            </div>\n          )} \n        </Droppable>\n\n        <div className={cx('add-item')}>\n          \n          <form onSubmit={addTask}>\n            <input\n              type='text'\n              placeholder='Add a task'\n              ref={taskRef}\n              onBlur={() => taskRef.current.value = ''}\n            />\n          </form>\n        </div>      \n      </div>\n    )}\n    </Draggable>\n  )\n  \n}\n\nPanel.Item = TodoItem;\n","import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./style.module.scss\";\nimport PropTypes from \"prop-types\";\nimport \"./snackbar.scss\";\n\n// lib\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst cx = classnames.bind(styles);\n\nSaveButton.propTypes = {\n  saveAll: PropTypes.func,\n};\n\nexport default function SaveButton({ saveAll }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleSave = () => {\n    saveAll();\n    setOpen(true);\n  };\n\n  return (\n    <div className={cx(\"save\")}>\n      <button onClick={handleSave}>Save</button>\n      <Snackbar className={cx(\"toast\")}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={open}\n        onClose={() => setOpen(false)}\n        autoHideDuration={1000}\n        message=\"Saved successfully\"\n      ></Snackbar>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport classnames from \"classnames/bind\";\nimport styles from \"./style.module.scss\";\n\n// components\nimport Clock from \"../base/Clock\";\nimport AddList from \"../base/AddList\";\nimport Panel from \"@/base/Panel\";\nimport SaveButton from \"../base/SaveButton\"\n\n// lib\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\n// utils\nimport useTaskReducer, { TASK_ACTION, LIST_ACTION } from \"./useTaskReducer\";\n\nconst cx = classnames.bind(styles);\n\nfunction TodoList() {\n  const [taskInfo, taskDispatch] = useTaskReducer();\n  // const [taskInfo, taskDispatch] = useReducer(taskReducer, initialState);\n\n  // console.log(taskInfo);\n\n  const onDragEnd = (dragInfo) => {\n    const { destination, source, type } = dragInfo;\n\n    if (!destination) {\n      return;\n    }\n\n    if (type === \"panel\") {\n      const panelList = [...taskInfo.allList];\n\n      [panelList[source.index], panelList[destination.index]] = [\n        panelList[destination.index],\n        panelList[source.index],\n      ];\n\n      taskDispatch({\n        type: LIST_ACTION.MOVE_LIST,\n        payload: panelList,\n      });\n\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const sourceList = [...taskInfo.tasks[source.droppableId]];\n    const targetList = [...taskInfo.tasks[destination.droppableId]];\n\n    if (destination.droppableId === source.droppableId) {\n      [sourceList[source.index], sourceList[destination.index]] = [\n        sourceList[destination.index],\n        sourceList[source.index],\n      ];\n\n      taskDispatch({\n        type: TASK_ACTION.MOVE_TASK,\n        payload: { ...taskInfo.tasks, [source.droppableId]: sourceList },\n      });\n      return;\n    }\n\n    targetList.splice(destination.index, 0, sourceList[source.index]);\n    sourceList.splice(source.index, 1);\n\n    taskDispatch({\n      type: TASK_ACTION.MOVE_TASK,\n      payload: {\n        ...taskInfo.tasks,\n        [source.droppableId]: sourceList,\n        [destination.droppableId]: targetList,\n      },\n    });\n  };\n\n  const saveAll = () => {\n    localStorage.setItem(\"board\", JSON.stringify(taskInfo));\n  };\n\n  useEffect(() => {\n    taskDispatch({\n      type: LIST_ACTION.INITIAL_STATE,\n      payload: JSON.parse(localStorage.getItem(\"board\")),\n    });\n  }, [taskDispatch]);\n\n  return (\n    <div className={cx(\"container\")}>\n      <AddList taskDispatch={taskDispatch} />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"panel\">\n          {(provided) => (\n            <div\n              className={cx(\"lists\")}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {taskInfo.allList.map((item, index) => (\n                <Panel\n                  key={item.listId}\n                  listIndex={index}\n                  listTitle={item.listTitle}\n                  listId={item.listId}\n                  colorType={item.colorType}\n                  taskDispatch={taskDispatch}\n                >\n                  {taskInfo.tasks[item.listId].map((element, index) => (\n                    <Panel.Item\n                      key={element.taskId}\n                      itemIndex={index}\n                      taskTitle={element.taskTitle}\n                      taskId={element.taskId}\n                      listId={item.listId}\n                      colorType={item.colorType}\n                      taskDispatch={taskDispatch}\n                    />\n                  ))}\n                </Panel>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n       <SaveButton saveAll={saveAll}/>\n      <Clock />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport styles from \"../../styles/main.scss\";\nimport classnames from \"classnames/bind\";\n\n// components\nimport TodoList from \"../../components/TodoList\";\n\nconst cx = classnames.bind(styles);\n\nexport default function Home() {\n  return <div className={cx(\"home\")}>\n    <TodoList/>\n  </div>;\n}\n","import Home from \"./views/Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// lib\nimport {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme,\n} from \"@material-ui/core/styles\";\n\nconst theme = unstable_createMuiStrictModeTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}